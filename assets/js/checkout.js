!function(r){var t={};function o(n){if(t[n])return t[n].exports;var e=t[n]={i:n,l:!1,exports:{}};return r[n].call(e.exports,e,e.exports,o),e.l=!0,e.exports}o.m=r,o.c=t,o.d=function(n,e,r){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)o.d(r,t,function(n){return e[n]}.bind(null,t));return r},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="",o(o.s=2)}([,,function(n,e,r){n.exports=r(3)},function(module,exports){function x(n){if(w[n])return w[n].exports;var e=w[n]={i:n,l:!1,exports:{}};return v[n].call(e.exports,e,e.exports,x),e.l=!0,e.exports}var v,w;v={"./assets/es6/_functions.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ADYEN\", function() { return ADYEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prefixIt\", function() { return prefixIt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"blockSection\", function() { return blockSection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unBlockSection\", function() { return unBlockSection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isJson\", function() { return isJson; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elemSendAjaxCall\", function() { return elemSendAjaxCall; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debugLog\", function() { return debugLog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"showInstallmentsField\", function() { return showInstallmentsField; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearCardForm\", function() { return clearCardForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setEncryptedCardData\", function() { return setEncryptedCardData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateCardForm\", function() { return generateCardForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateApplePay\", function() { return generateApplePay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateGooglePay\", function() { return generateGooglePay; });\nfunction add(x, y){\n   return x + y;\n}\n\nfunction ADYEN(){\n   return woosa_adn;\n}\n\nfunction prefixIt(selector, type = ''){\n   return type+ADYEN().prefix+selector;\n}\n\nfunction blockSection(elem) {\n   jQuery(elem).block({\n      message: null,\n      overlayCSS: {\n         background: '#fff',\n         opacity: 0.6\n      }\n   });\n}\n\nfunction unBlockSection(elem) {\n   jQuery(elem).unblock();\n}\n\nfunction isJson(str) {\n   try{\n      JSON.parse(str);\n   }catch (e){\n      //Error\n      //JSON is not okay\n      return false;\n   }\n\n  return true;\n}\n\nfunction elemSendAjaxCall(target){\n\n   jQuery(function($){\n\n      let is_processing = false;\n\n      $(document).on('click', target, function(e){\n\n         e.preventDefault();\n\n         let btn = $(this),\n            action = btn.attr('data-'+prefixIt('-action')),\n            extra = isJson(btn.attr('data-'+prefixIt('-extra'))) ? JSON.parse(btn.attr('data-'+prefixIt('-extra'))) : btn.attr('data-'+prefixIt('-extra')),\n            processing_label = ADYEN().translation.processing,\n            parentElem = btn.parent(),\n            fields = btn.closest('#mainform').find(':input').serialize();\n\n         if(is_processing) return;\n\n         $.ajax({\n            url: ADYEN().ajax.url,\n            method: 'POST',\n            data: {\n               action: prefixIt('_'+action),\n               security: ADYEN().ajax.nonce,\n               extra: extra,\n               fields: fields,\n            },\n            beforeSend: function(){\n\n               is_processing = true;\n\n               blockSection('#wpcontent');\n\n               btn.data('label', btn.text());\n               btn.text(processing_label).attr('disabled', true);\n\n               parentElem.parent().find(prefixIt('-error-text', '.')).remove();\n            },\n            success: function(res){\n\n               if(res.success){\n                  window.location.reload();\n               }else{\n                  $('<p class=\"'+prefixIt('-error-text')+'\">'+res.data.message+'</p>').insertAfter(parentElem);\n                  btn.text( btn.data('label') ).attr('disabled', false);\n                  unBlockSection('#wpcontent');\n               }\n            },\n            complete: function(){\n\n               is_processing = false;\n            }\n         });\n      });\n\n   });\n\n}\n\nfunction debugLog(msg){\n   if(ADYEN().debug){\n      console.log('%cDEBUG LOG: '+msg, \"color: orange\");\n   }\n}\n\n\nfunction showInstallmentsField(){\n   let interval = setInterval(() => {\n      if(jQuery('.adyen-checkout__spinner__wrapper').parent().is(':hidden')){\n         jQuery(prefixIt('-installments-field', '.')).fadeIn();\n         clearInterval(interval);\n      }\n   }, 100);\n}\n\n\n/**\n * Clear card form data from hidden fileds.\n *\n * @since 1.1.1 - change function name\n * @since 1.0.6\n * @param {string} methodType\n */\nfunction clearCardForm(methodType){\n\n   jQuery(prefixIt('-'+methodType+'-card-number', '#')).val('');\n   jQuery(prefixIt('-'+methodType+'-card-exp-month', '#')).val('');\n   jQuery(prefixIt('-'+methodType+'-card-exp-year', '#')).val('');\n   jQuery(prefixIt('-'+methodType+'-card-cvc', '#')).val('');\n   jQuery(prefixIt('-'+methodType+'-card-holder', '#')).val('');\n   jQuery(prefixIt('-'+methodType+'-sci', '#')).val('');\n   jQuery(prefixIt('-'+methodType+'-store-card', '#')).val('');\n\n   debugLog('Clear the encrypted card data.');\n\n}\n\n\n/**\n * Fills the encrypted card data in hidden fields.\n *\n * @since 1.1.1\n * @param {object} state\n */\nfunction setEncryptedCardData(state, component = {}, methodType = ''){\n\n   if(state && state.isValid){\n      let store_card = state.data.storePaymentMethod ? state.data.storePaymentMethod : '0';\n\n      if(state.data.paymentMethod.type == 'scheme'){\n\n         if(component._node){\n\n            jQuery('#'+component._node.id).data('card_state', state);\n\n            debugLog('Saved temporarily the encrypted card data on the element.');\n\n         }\n\n         jQuery(prefixIt('-'+methodType+'-card-number', '#')).val(state.data.paymentMethod.encryptedCardNumber);\n         jQuery(prefixIt('-'+methodType+'-card-exp-month', '#')).val(state.data.paymentMethod.encryptedExpiryMonth);\n         jQuery(prefixIt('-'+methodType+'-card-exp-year', '#')).val(state.data.paymentMethod.encryptedExpiryYear);\n         jQuery(prefixIt('-'+methodType+'-card-cvc', '#')).val(state.data.paymentMethod.encryptedSecurityCode);\n         jQuery(prefixIt('-'+methodType+'-card-holder', '#')).val(state.data.paymentMethod.holderName);\n         jQuery(prefixIt('-'+methodType+'-sci', '#')).val(state.data.paymentMethod.storedPaymentMethodId);\n         jQuery(prefixIt('-'+methodType+'-store-card', '#')).val(store_card);\n\n         debugLog('Set the encrypted card data.');\n\n      }\n\n   }else{\n\n      clearCardForm(methodType);\n   }\n}\n\n\n/**\n * Generates the card form fields.\n *\n * @since 1.1.3 - add support for Web Component v4.4.0 - configuration object should be pased to create()\n * @since 1.1.1 - do not mount the component everytime a click takes place but only set the encrypted data\n *              - change function name\n * @since 1.0.0\n * @param {object} checkout\n */\nfunction generateCardForm(checkout){\n\n   jQuery('[data-'+prefixIt('-stored-card')+']').off('click').on('click', function(){\n\n      let _this        = jQuery(this),\n         parent        = _this.parent(),\n         current       = parent.find(prefixIt('-stored-card__fields', '.')),\n         methodType    = _this.attr('data-'+prefixIt('-stored-card-type')),\n         formElemId    = _this.attr('data-'+prefixIt('-stored-card')),\n         formElem      = jQuery('#'+formElemId),\n         formType      = 'scheme' === methodType ? 'card' : methodType,\n         cardState     = formElem.data('card_state'),\n         methodIndex   = formElemId.replace(/[^0-9\\.]/g, ''),\n         storedMethods = checkout.paymentMethodsResponse.storedPaymentMethods;\n\n\n      if(formElem.length > 0){\n\n         //new card\n         if( '' === methodIndex){\n\n            if( '' == formElem.children(0).html() ){\n\n               checkout.create(formType, {\n                  brands: ADYEN().api.card_types,\n                  enableStoreDetails: ADYEN().api.store_card,\n                  hasHolderName: true,\n                  holderNameRequired: true,\n               }).mount('#'+formElemId);\n\n               debugLog('Initiated the form for using a new card.');\n\n            }else{\n\n               setEncryptedCardData(cardState, {}, methodType);\n            }\n\n            jQuery(prefixIt('-'+methodType+'-is-stored-card', '#')).val('no');\n\n         //stored card\n         }else{\n\n            if('' == formElem.html()){\n\n               checkout.create(formType, storedMethods[methodIndex]).mount('#'+formElemId);\n\n               debugLog('Initiated the form for the existing card.');\n\n            }else{\n\n               setEncryptedCardData(cardState, {}, methodType);\n            }\n\n            jQuery(prefixIt('-'+methodType+'-is-stored-card', '#')).val('yes');\n         }\n      }\n\n      jQuery(prefixIt('-stored-card__fields', '.')).closest(prefixIt('-stored-card', '.')).not(parent).removeClass('selected');\n      jQuery(prefixIt('-stored-card__fields', '.')).not(current).slideUp();\n\n      current.slideToggle();\n      parent.addClass('selected');\n   });\n}\n\n\n/**\n * Generates AppleyPay button.\n * @since unkown\n * @param {object} checkout\n */\nfunction generateApplePay(checkout){\n\n   // const apple_merchant_name = jQuery('#woosa_adyen_applepay_merchant_name').val(),\n   //       apple_merchant_identifier = jQuery('#woosa_adyen_applepay_merchant_identifier').val();\n\n   // const applepay = checkout.create(\"applepay\", {\n   //    currencyCode: ADYEN().currency,\n   //    amount: (ADYEN().cart.total) * 100, //it's in cents\n   //    countryCode: ADYEN().cart.country,\n   //    configuration: {\n   //       merchantName: apple_merchant_name,\n   //       merchantIdentifier: apple_merchant_identifier\n   //    },\n   //    // Button config\n   //    buttonType: \"buy\", // Optional. The type of button you want to be displayed in the payments form\n   //    buttonColor: \"black\", // Optional. Specify the color of the button\n   //    onValidateMerchant: (resolve, reject, validationURL) => {\n   //       // Call the validation endpoint with validationURL.\n   //       // Call resolve(MERCHANTSESSION) or reject() to complete merchant validation.\n   //    }\n   // });\n\n   // applepay\n   //    .isAvailable()\n   //    .then(() => {\n   //       applepay.mount(\"#applepay-container\");\n   //    })\n   //    .catch(e => {\n   //       console.log(e)\n   //       jQuery('.payment_method_woosa_adyen_applepay').remove();\n   //    });\n}\n\n\n\n/**\n * Generates GooglePay button.\n *\n * @since 1.1.0\n * @param {object} checkout\n */\nfunction generateGooglePay(checkout){\n\n   if(jQuery('#woosa_adyen_googlepay_button').length > 0){\n\n      const test_mode = 'yes' !== jQuery('#woosa_adyen_googlepay_testmode').val() && 'yes' !== ADYEN().api.test_mode ? false : true,\n         merchant_id = jQuery('#woosa_adyen_googlepay_merchant_identifier').val();\n\n      let config = {\n         gatewayMerchantId: ADYEN().api.adyen_merchant,\n         merchantName: ADYEN().site_name\n      };\n\n      if( test_mode ){\n         config.merchantIdentifier = merchant_id;\n      }\n\n      const googlepay = checkout.create(\"paywithgoogle\", {\n         environment: test_mode ? 'TEST' : 'PRODUCTION',\n         amount: {\n            currency: ADYEN().currency,\n            value: (ADYEN().cart.total) * 100, //it's in cents\n         },\n         configuration: config,\n         buttonColor: \"white\",\n         onAuthorized: (data) => {\n\n            jQuery('#'+ADYEN().prefix+'-googlepay-container .googlepay-description').html(data.paymentMethodData.description).show();\n            jQuery('#woosa_adyen_googlepay_description').val(data.paymentMethodData.description);\n            jQuery('#woosa_adyen_googlepay_token').val(data.paymentMethodData.tokenizationData.token);\n         }\n      });\n\n\n      googlepay\n         .isAvailable()\n         .then(() => {\n\n            if(jQuery('.adyen-checkout__paywithgoogle').length == 0){\n               googlepay.mount(\"#woosa_adyen_googlepay_button\");\n            }\n\n         })\n         .catch(e => {\n            console.log(e);\n            jQuery('.wc_payment_method .payment_method_woosa_adyen_googlepay').remove();\n         });\n   }\n}\n\n\n//# sourceURL=webpack:///./assets/es6/_functions.js?")},"./assets/es6/checkout.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_functions */ \"./assets/es6/_functions.js\");\n\n\nvar popup = __webpack_require__(/*! jquery-popup-overlay */ \"./node_modules/jquery-popup-overlay/index.js\");\n\njQuery(function($){\n\n   if(typeof AdyenCheckout == 'undefined') return;\n\n\n   /**\n    * Init popup used for payment actions\n    * @since 1.0.0\n    */\n   $(Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('-popup', '.')).each(function(){\n      let _this = $(this),\n         blur = (typeof _this.attr('data-blur') == 'undefined') ? false : true,\n         escape = (typeof _this.attr('data-escape') == 'undefined') ? false : true;\n\n      _this.popup({\n         autoopen: true,\n         blur: blur,\n         escape: escape,\n         scrolllock: true\n      });\n   });\n\n   let payment_actions = [\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('-card-action', '#'),\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('-boleto-action', '#'),\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('-alipay-action', '#'),\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('-wechatpay-action', '#'),\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('-googlepay-action', '#'),\n   ];\n\n\n\n   /**\n    * Init Adyen's Card component\n    * @since 1.1.3 - updates according to Web component v4.4.0\n    * @since 1.1.1 - change `originKey` to `clientKey`\n    * @since 1.0.0\n    */\n   const checkout = new AdyenCheckout({\n      paymentMethodsResponse: Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"ADYEN\"])().api.response_payment_methods,\n      clientKey: Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"ADYEN\"])().api.origin_key,\n      locale: Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"ADYEN\"])().locale,\n      environment: Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"ADYEN\"])().api.test_mode === 'yes' ? 'test' : 'live',\n      onChange: function (state, component) {\n\n         let methodType = 'bcmc' === component.props.type ? 'bcmc' : state.data.paymentMethod.type;\n\n         Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"setEncryptedCardData\"])(state, component, methodType);\n\n      },\n      onAdditionalDetails: function (state, component) {\n\n         let elem = $(component._node),\n            order_id = elem.attr('data-order_id'),\n            action_key = component.props.dataKey;//threeds2.fingerprint, threeds2.challengeResult\n\n         // send for processing\n         $.ajax({\n            url: Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"ADYEN\"])().ajax.url,\n            method: 'POST',\n            data: {\n               action: Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('_send_payment_details'),\n               security: Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"ADYEN\"])().ajax.nonce,\n               action_data: state.data,\n               order_id: order_id\n            },\n            success: function(res) {\n               if(res.data.redirect){\n                  window.location.href = res.data.redirect;\n               }\n            }\n         });\n\n      },\n      onError: function(err){\n         if(Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"ADYEN\"])().debug){\n            console.log(err)\n         }\n      }\n   });\n\n\n\n   /**\n    * Run after checkout is updated\n    *\n    * @since 1.1.1 - remove Giropay web component\n    * @since 1.0.3 - add support for saving credit cards\n    * @since 1.0.0\n    */\n   $(document).on('updated_checkout', function(){\n\n      if($(Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('-datepicker', '.')).length > 0){\n         $(Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"prefixIt\"])('-datepicker', '.')).datepicker({\n            dateFormat : \"dd-mm-yy\",\n            changeYear: true,\n            changeMonth: true,\n         })\n      }\n\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"generateCardForm\"])(checkout);\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"generateGooglePay\"])(checkout);\n      Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"generateApplePay\"])(checkout)\n\n   });\n   Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"generateCardForm\"])(checkout);\n   Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"generateGooglePay\"])(checkout);\n   Object(_functions__WEBPACK_IMPORTED_MODULE_0__[\"generateApplePay\"])(checkout)\n\n\n\n   /**\n    * Create payment action based on the received action data\n    * @since 1.0.4\n    */\n   payment_actions.map(function(item){\n\n      if($(item).length > 0){\n\n         let action = JSON.parse($(item).attr('data-payment_action'));\n\n         checkout.createFromAction(action).mount(item);\n      }\n\n   });\n\n\n\n});\n\n\n//# sourceURL=webpack:///./assets/es6/checkout.js?")},"./node_modules/jquery-popup-overlay/index.js":function(module,exports,__webpack_require__){eval("/* eslint-disable */\nif (!jQuery) {\n    console.log('jquery.popupoverlay - jQuery not defined.');\n}\n__webpack_require__(/*! ./jquery.popupoverlay */ \"./node_modules/jquery-popup-overlay/jquery.popupoverlay.js\");\n\n//# sourceURL=webpack:///./node_modules/jquery-popup-overlay/index.js?")},"./node_modules/jquery-popup-overlay/jquery.popupoverlay.js":function(module,exports){eval("/*!\r\n * jQuery Popup Overlay\r\n *\r\n * @requires jQuery v1.7.1+\r\n * @link https://vast-engineering.github.com/jquery-popup-overlay/\r\n */\r\n;(function ($) { /* eslint-disable-line */\r\n\r\n    var $window = $(window);\r\n    var options = {};\r\n    var zindexvalues = [];\r\n    var lastclicked = [];\r\n    var scrollbarwidth;\r\n    var bodymarginright = null;\r\n    var opensuffix = '_open';\r\n    var closesuffix = '_close';\r\n    var visiblePopupsArray = [];\r\n    var transitionsupport = null;\r\n    var opentimer;\r\n    var iOS = /(iPad|iPhone|iPod)/.test(navigator.userAgent);\r\n    var focusableElementsString = \"a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]\";\r\n\r\n    var methods = {\r\n\r\n        _init: function (el) {\r\n            var $el = $(el);\r\n            var options = $el.data('popupoptions');\r\n            lastclicked[el.id] = false;\r\n            zindexvalues[el.id] = 0;\r\n\r\n            if (!$el.data('popup-initialized')) {\r\n                $el.attr('data-popup-initialized', 'true');\r\n                methods._initonce(el);\r\n            }\r\n\r\n            if (options.autoopen) {\r\n                setTimeout(function() {\r\n                    methods.show(el, 0);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _initonce: function (el) {\r\n            var $el = $(el);\r\n            var $body = $('body');\r\n            var $wrapper;\r\n            var options = $el.data('popupoptions');\r\n\r\n            bodymarginright = parseInt($body.css('margin-right'), 10);\r\n            transitionsupport = document.body.style.webkitTransition !== undefined ||\r\n                                document.body.style.MozTransition !== undefined ||\r\n                                document.body.style.msTransition !== undefined ||\r\n                                document.body.style.OTransition !== undefined ||\r\n                                document.body.style.transition !== undefined;\r\n\r\n            if (options.scrolllock) {\r\n                // Calculate the browser's scrollbar width dynamically\r\n                var parent;\r\n                var child;\r\n                if (typeof scrollbarwidth === 'undefined') {\r\n                    parent = $('<div style=\"width:50px;height:50px;overflow:auto\"><div/></div>').appendTo('body');\r\n                    child = parent.children();\r\n                    scrollbarwidth = child.innerWidth() - child.height(99).innerWidth();\r\n                    parent.remove();\r\n                }\r\n            }\r\n\r\n            if (!$el.attr('id')) {\r\n                $el.attr('id', 'j-popup-' + parseInt((Math.random() * 100000000), 10));\r\n            }\r\n\r\n            $el.addClass('popup_content');\r\n\r\n            if ((options.background) && (!$('#' + el.id + '_background').length)) {\r\n\r\n                $body.append('<div id=\"' + el.id + '_background\" class=\"popup_background\"></div>');\r\n\r\n                var $background = $('#' + el.id + '_background');\r\n\r\n                $background.css({\r\n                    opacity: 0,\r\n                    visibility: 'hidden',\r\n                    backgroundColor: options.color,\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    left: 0\r\n                });\r\n\r\n                if (options.setzindex && !options.autozindex) {\r\n                    $background.css('z-index', '100000');\r\n                }\r\n\r\n                if (options.transition) {\r\n                    $background.css('transition', options.transition);\r\n                }\r\n            }\r\n\r\n            $body.append(el);\r\n\r\n            $el.wrap('<div id=\"' + el.id + '_wrapper\" class=\"popup_wrapper\" />');\r\n\r\n            $wrapper = $('#' + el.id + '_wrapper');\r\n\r\n            $wrapper.css({\r\n                opacity: 0,\r\n                visibility: 'hidden',\r\n                position: 'absolute'\r\n            });\r\n\r\n            // Make div clickable in iOS\r\n            if (iOS) {\r\n                $background = $('#' + el.id + '_background');\r\n                $background.css('cursor', 'pointer');\r\n                $(options.pagecontainer).css('cursor', 'pointer');\r\n            }\r\n\r\n            if (options.type == 'overlay' && !options.absolute && options.background) {\r\n                $wrapper.css('overflow','auto');\r\n                $wrapper[0].style.WebkitOverflowScrolling = 'touch'; // for smooth scrolling in overflow:auto divs in iOS\r\n            }\r\n\r\n            $el.css({\r\n                opacity: 0,\r\n                visibility: 'hidden',\r\n                'pointer-events': 'auto', // reset pointer events back to default for a child element\r\n                display: 'inline-block'\r\n            });\r\n\r\n            if (options.setzindex && !options.autozindex) {\r\n                $wrapper.css('z-index', '100001');\r\n            }\r\n\r\n            if (!options.outline) {\r\n                $el.css('outline', 'none');\r\n            }\r\n\r\n            if (options.transition) {\r\n                $el.css('transition', options.transition);\r\n                $wrapper.css('transition', options.transition);\r\n            }\r\n\r\n            // Hide popup content from screen readers initially\r\n            $el.attr('aria-hidden', true);\r\n\r\n            if (options.type == 'overlay') {\r\n                $el.css({\r\n                    textAlign: 'left',\r\n                    position: 'relative',\r\n                    verticalAlign: 'middle'\r\n                });\r\n\r\n                $wrapper.css({\r\n                    position: 'fixed',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    top: 0,\r\n                    left: 0,\r\n                    textAlign: 'center'\r\n                });\r\n\r\n                // CSS vertical align helper\r\n                $wrapper.append('<div class=\"popup_align\" />');\r\n\r\n                $('.popup_align').css({\r\n                    display: 'inline-block',\r\n                    verticalAlign: 'middle',\r\n                    height: '100%'\r\n                });\r\n            }\r\n\r\n            // Add WAI ARIA role to announce dialog to screen readers\r\n            $el.attr('role', 'dialog');\r\n\r\n            var openelement =  (options.openelement) ? options.openelement : ('.' + el.id + opensuffix);\r\n\r\n            $(openelement).each(function (i, item) {\r\n                $(item).attr('data-popup-ordinal', i);\r\n\r\n                if (!item.id) {\r\n                    $(item).attr('id', 'open_' + parseInt((Math.random() * 100000000), 10));\r\n                }\r\n            });\r\n\r\n            // Set aria-labelledby (if aria-label or aria-labelledby is not set in html)\r\n            if (!($el.attr('aria-labelledby') || $el.attr('aria-label'))) {\r\n                $el.attr('aria-labelledby', $(openelement).attr('id'));\r\n            }\r\n\r\n            // Show and hide tooltips on hover\r\n            if(options.action == 'hover'){\r\n                options.keepfocus = false;\r\n\r\n                // Handler: mouseenter, focusin\r\n                $(openelement).on('mouseenter', function () {\r\n                    methods.show(el, $(this).data('popup-ordinal'));\r\n                });\r\n\r\n                // Handler: mouseleave, focusout\r\n                $(openelement).on('mouseleave', function () {\r\n                    methods.hide(el);\r\n                });\r\n\r\n            } else {\r\n\r\n                // Handler: Show popup when clicked on `open` element\r\n                $(document).on('click.jqp', openelement, function (event) {\r\n                    event.preventDefault();\r\n\r\n                    var ord = $(this).data('popup-ordinal');\r\n                    setTimeout(function() { // setTimeout is to allow `close` method to finish (for issues with multiple tooltips)\r\n                        methods.show(el, ord);\r\n                    }, 0);\r\n                });\r\n            }\r\n\r\n            if (options.closebutton) {\r\n                methods.addclosebutton(el);\r\n            }\r\n\r\n            if (options.detach) {\r\n                $el.detach();\r\n            } else {\r\n                $el.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show method\r\n         *\r\n         * @param {object} el - popup instance DOM node\r\n         * @param {number} ordinal - order number of an `open` element\r\n         */\r\n        show: function (el, ordinal) {\r\n            var $el = $(el);\r\n\r\n            if ($el.data('popup-visible')) return;\r\n\r\n            // Initialize if not initialized. Required for: $('#popup').popup('show')\r\n            if (!$el.data('popup-initialized')) {\r\n                methods._init(el);\r\n            }\r\n            $el.attr('data-popup-initialized', 'true');\r\n\r\n            var $body = $('body');\r\n            var options = $el.data('popupoptions');\r\n            var $wrapper = $('#' + el.id + '_wrapper');\r\n            var $background = $('#' + el.id + '_background');\r\n\r\n            // `beforeopen` callback event\r\n            callback(el, ordinal, options.beforeopen);\r\n\r\n            // Remember last clicked place\r\n            lastclicked[el.id] = ordinal;\r\n\r\n            // Add popup id to visiblePopupsArray\r\n            setTimeout(function() {\r\n                visiblePopupsArray.push(el.id);\r\n            }, 0);\r\n\r\n            // Calculating maximum z-index\r\n            if (options.autozindex) {\r\n\r\n                var elements = document.getElementsByTagName('*');\r\n                var len = elements.length;\r\n                var maxzindex = 0;\r\n\r\n                for(var i=0; i<len; i++){\r\n\r\n                    var elementzindex = $(elements[i]).css('z-index');\r\n\r\n                    if(elementzindex !== 'auto'){\r\n\r\n                      elementzindex = parseInt(elementzindex, 10);\r\n\r\n                      if(maxzindex < elementzindex){\r\n                        maxzindex = elementzindex;\r\n                      }\r\n                    }\r\n                }\r\n\r\n                zindexvalues[el.id] = maxzindex;\r\n\r\n                // Add z-index to the background\r\n                if (options.background) {\r\n                    if (zindexvalues[el.id] >= 0) {\r\n                        $('#' + el.id + '_background').css({\r\n                            zIndex: (zindexvalues[el.id] + 1)\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Add z-index to the wrapper\r\n                if (zindexvalues[el.id] >= 0) {\r\n                    $wrapper.css({\r\n                        zIndex: (zindexvalues[el.id] + 2)\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (options.detach) {\r\n                $wrapper.prepend(el);\r\n                $el.show();\r\n            } else {\r\n                $el.show();\r\n            }\r\n\r\n            opentimer = setTimeout(function() {\r\n                $wrapper.css({\r\n                    visibility: 'visible',\r\n                    opacity: 1\r\n                });\r\n\r\n                $('html').addClass('popup_visible').addClass('popup_visible_' + el.id);\r\n                $wrapper.addClass('popup_wrapper_visible');\r\n            }, 20); // 20ms required for opening animation to occur in FF\r\n\r\n            // Disable background layer scrolling when popup is opened\r\n            if (options.scrolllock) {\r\n                $body.css('overflow', 'hidden');\r\n                if ($body.height() > $window.height()) {\r\n                    $body.css('margin-right', bodymarginright + scrollbarwidth);\r\n                }\r\n            }\r\n\r\n            $el.css({\r\n                'visibility': 'visible',\r\n                'opacity': 1\r\n            });\r\n\r\n            // Show background\r\n            if (options.background) {\r\n                $background.css({\r\n                    'visibility': 'visible',\r\n                    'opacity': options.opacity\r\n                });\r\n\r\n                // Fix IE8 issue with background not appearing\r\n                setTimeout(function() {\r\n                    $background.css({\r\n                        'opacity': options.opacity\r\n                    });\r\n                }, 0);\r\n            }\r\n\r\n            $el.data('popup-visible', true);\r\n\r\n            // Position popup\r\n            methods.reposition(el, ordinal);\r\n\r\n            // Remember which element had focus before opening a popup\r\n            $el.data('focusedelementbeforepopup', document.activeElement);\r\n\r\n            // Make holder div programatically focusable with tabindex:-1 (tabindex:0 is keyboard focusable)\r\n            $el.attr('tabindex', -1);\r\n\r\n            // Focus the popup or user specified element.\r\n            // Initial timeout of 50ms is set to give some time to popup to show after clicking on\r\n            // `open` element, and after animation is complete to prevent background scrolling.\r\n            setTimeout(function() {\r\n                if (options.focuselement === 'closebutton') { // e.g. focuselement:'closebutton'\r\n                    $('#' + el.id + ' .' + el.id + closesuffix + ':first').focus();\r\n                } else if (options.focuselement) { // e.g. focuselement:'#my-close-button'\r\n                    $(options.focuselement).focus();\r\n                } else if (options.focuselement === true || options.keepfocus) { // e.g. focuselement:true OR keepfocus:true\r\n                    $el.focus();\r\n                }\r\n            }, options.focusdelay);\r\n\r\n            // Hide main content from screen readers\r\n            if (options.keepfocus) {\r\n                $(options.pagecontainer).attr('aria-hidden', true);\r\n            }\r\n\r\n            // Reveal popup content to screen readers\r\n            $el.attr('aria-hidden', false);\r\n\r\n            callback(el, ordinal, options.onopen);\r\n\r\n            if (transitionsupport) {\r\n                $wrapper.one('transitionend', function() {\r\n                    callback(el, ordinal, options.opentransitionend);\r\n                });\r\n            } else {\r\n                callback(el, ordinal, options.opentransitionend);\r\n            }\r\n\r\n            // Handler: Reposition tooltip when window is resized\r\n            if (options.type == 'tooltip') {\r\n                $(window).on('resize.' + el.id, function () {\r\n                    methods.reposition(el, ordinal);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide method\r\n         *\r\n         * @param object el - popup instance DOM node\r\n         * @param boolean outerClick - click on the outer content below popup\r\n         */\r\n        hide: function (el, outerClick) {\r\n            // Get index of popup ID inside of visiblePopupsArray\r\n            var popupIdIndex = $.inArray(el.id, visiblePopupsArray);\r\n\r\n            // If popup is not opened, ignore the rest of the function\r\n            if (popupIdIndex === -1) {\r\n                return;\r\n            }\r\n\r\n            if(opentimer) clearTimeout(opentimer);\r\n\r\n            var $body = $('body');\r\n            var $el = $(el);\r\n            var options = $el.data('popupoptions');\r\n            var $wrapper = $('#' + el.id + '_wrapper');\r\n            var $background = $('#' + el.id + '_background');\r\n\r\n            $el.data('popup-visible', false);\r\n\r\n            if (visiblePopupsArray.length === 1) {\r\n                $('html').removeClass('popup_visible').removeClass('popup_visible_' + el.id);\r\n            } else {\r\n                if($('html').hasClass('popup_visible_' + el.id)) {\r\n                    $('html').removeClass('popup_visible_' + el.id);\r\n                }\r\n            }\r\n\r\n            // Remove popup from the visiblePopupsArray\r\n            visiblePopupsArray.splice(popupIdIndex, 1);\r\n\r\n            if($wrapper.hasClass('popup_wrapper_visible')) {\r\n                $wrapper.removeClass('popup_wrapper_visible');\r\n            }\r\n\r\n            // Focus back on saved element\r\n            if (options.keepfocus && !outerClick) {\r\n                setTimeout(function() {\r\n                    if ($($el.data('focusedelementbeforepopup')).is(':visible')) {\r\n                        $el.data('focusedelementbeforepopup').focus();\r\n                    }\r\n                }, 0);\r\n            }\r\n\r\n            // Hide popup\r\n            $wrapper.css({\r\n                'visibility': 'hidden',\r\n                'opacity': 0\r\n            });\r\n            $el.css({\r\n                'visibility': 'hidden',\r\n                'opacity': 0\r\n            });\r\n\r\n            // Hide background\r\n            if (options.background) {\r\n                $background.css({\r\n                    'visibility': 'hidden',\r\n                    'opacity': 0\r\n                });\r\n            }\r\n\r\n            // Reveal main content to screen readers\r\n            $(options.pagecontainer).attr('aria-hidden', false);\r\n\r\n            // Hide popup content from screen readers\r\n            $el.attr('aria-hidden', true);\r\n\r\n            // `onclose` callback event\r\n            callback(el, lastclicked[el.id], options.onclose);\r\n\r\n            if (transitionsupport && $el.css('transition-duration') !== '0s') {\r\n                $el.one('transitionend', function() {\r\n\r\n                    if (!($el.data('popup-visible'))) {\r\n                        if (options.detach) {\r\n                            $el.detach();\r\n                        } else {\r\n                            $el.hide();\r\n                        }\r\n                    }\r\n\r\n                    // Re-enable scrolling of background layer, if needed\r\n                    if (options.scrolllock) {\r\n                        setTimeout(function() {\r\n                            if ($.grep(visiblePopupsArray, function(eid) { return $(\"#\"+eid).data('popupoptions').scrolllock }).length) {\r\n                                // Some \"scolllock=true\" popup is currently visible, leave scrolling disabled\r\n                                return;\r\n                            }\r\n                            $body.css({\r\n                                overflow: 'visible',\r\n                                'margin-right': bodymarginright\r\n                            });\r\n                        }, 10); // 10ms added for CSS transition in Firefox which doesn't like overflow:auto\r\n                    }\r\n\r\n                    callback(el, lastclicked[el.id], options.closetransitionend);\r\n                });\r\n            } else {\r\n                if (options.detach) {\r\n                    $el.detach();\r\n                } else {\r\n                    $el.hide();\r\n                }\r\n\r\n                // Re-enable scrolling of background layer, if needed\r\n                if (options.scrolllock) {\r\n                    setTimeout(function() {\r\n                        if ($.grep(visiblePopupsArray, function(eid) { return $(\"#\"+eid).data('popupoptions').scrolllock }).length) {\r\n                            // Some \"scrolllock=true\" popup is currently visible, leave scrolling disabled\r\n                            return;\r\n                        }\r\n                        $body.css({\r\n                            overflow: 'visible',\r\n                            'margin-right': bodymarginright\r\n                        });\r\n                    }, 10); // 10ms added for CSS transition in Firefox which doesn't like overflow:auto\r\n                }\r\n\r\n                callback(el, lastclicked[el.id], options.closetransitionend);\r\n            }\r\n\r\n            if (options.type == 'tooltip') {\r\n                $(window).off('resize.' + el.id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle method\r\n         *\r\n         * @param {object} el - popup instance DOM node\r\n         * @param {number} ordinal - order number of an `open` element\r\n         */\r\n        toggle: function (el, ordinal) {\r\n            if ($(el).data('popup-visible')) {\r\n                methods.hide(el);\r\n            } else {\r\n                setTimeout(function() {\r\n                    methods.show(el, ordinal);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reposition method\r\n         *\r\n         * @param {object} el - popup instance DOM node\r\n         * @param {number} ordinal - order number of an `open` element\r\n         */\r\n        reposition: function (el, ordinal) {\r\n            var $el = $(el);\r\n            var options = $el.data('popupoptions');\r\n            var $wrapper = $('#' + el.id + '_wrapper');\r\n\r\n            ordinal = ordinal || 0;\r\n\r\n            // Tooltip type\r\n            if (options.type == 'tooltip') {\r\n                // TODO: this static assignments should probably be moved to init method\r\n                $wrapper.css({\r\n                    'position': 'absolute'\r\n                });\r\n\r\n                var $tooltipanchor;\r\n                if (options.tooltipanchor) {\r\n                    $tooltipanchor = $(options.tooltipanchor);\r\n                } else if (options.openelement) {\r\n                    $tooltipanchor = $(options.openelement).filter('[data-popup-ordinal=\"' + ordinal + '\"]');\r\n                } else {\r\n                    $tooltipanchor = $('.' + el.id + opensuffix + '[data-popup-ordinal=\"' + ordinal + '\"]');\r\n                }\r\n\r\n                var linkOffset = $tooltipanchor.offset() || { left: 0, top: 0 };\r\n\r\n                // Horizontal position for tooltip\r\n                if (options.horizontal == 'right') {\r\n                    $wrapper.css('left', linkOffset.left + $tooltipanchor.outerWidth() + options.offsetleft);\r\n                } else if (options.horizontal == 'leftedge') {\r\n                    $wrapper.css('left', linkOffset.left +  options.offsetleft);\r\n                } else if (options.horizontal == 'left') {\r\n                    $wrapper.css('right', $window.width() - linkOffset.left  - options.offsetleft);\r\n                } else if (options.horizontal == 'rightedge') {\r\n                    $wrapper.css('right', $window.width()  - linkOffset.left - $tooltipanchor.outerWidth() - options.offsetleft);\r\n                } else {\r\n                    $wrapper.css('left', linkOffset.left + ($tooltipanchor.outerWidth() / 2) - ($el.outerWidth() / 2) - parseFloat($el.css('marginLeft')) + options.offsetleft);\r\n                }\r\n\r\n                // Vertical position for tooltip\r\n                if (options.vertical == 'bottom') {\r\n                    $wrapper.css('top', linkOffset.top + $tooltipanchor.outerHeight() + options.offsettop);\r\n                } else if (options.vertical == 'bottomedge') {\r\n                    $wrapper.css('top', linkOffset.top + $tooltipanchor.outerHeight() - $el.outerHeight() + options.offsettop);\r\n                } else if (options.vertical == 'top') {\r\n                    $wrapper.css('bottom', $window.height() - linkOffset.top - options.offsettop);\r\n                } else if (options.vertical == 'topedge') {\r\n                    $wrapper.css('bottom', $window.height() - linkOffset.top - $el.outerHeight() - options.offsettop);\r\n                } else {\r\n                    $wrapper.css('top', linkOffset.top + ($tooltipanchor.outerHeight() / 2) - ($el.outerHeight() / 2) - parseFloat($el.css('marginTop')) + options.offsettop);\r\n                }\r\n\r\n            // Overlay type\r\n            } else if (options.type == 'overlay') {\r\n                // TODO all static assignments in this block should probably be moved to init method\r\n\r\n                // Horizontal position for overlay\r\n                if (options.horizontal) {\r\n                    $wrapper.css('text-align', options.horizontal);\r\n                } else {\r\n                    $wrapper.css('text-align', 'center');\r\n                }\r\n\r\n                // Vertical position for overlay\r\n                if (options.vertical) {\r\n                    $el.css('vertical-align', options.vertical);\r\n                } else {\r\n                    $el.css('vertical-align', 'middle');\r\n                }\r\n\r\n                if (options.absolute) {\r\n                    $wrapper.css({\r\n                        position: 'absolute',\r\n                        top: window.scrollY\r\n                    });\r\n                }\r\n\r\n                if (!options.background) {\r\n                    $wrapper.css({ 'pointer-events': 'none' });\r\n\r\n                    // If popup doesnt fit the viewport, and if background doesn't exist, add scrollbar to popup div instead of wrapper\r\n                    if (!options.absolute && !isInViewport(el)) {\r\n                        $el.css('overflow', 'auto');\r\n                        $el[0].style.WebkitOverflowScrolling = 'touch'; // for smooth scrolling in overflow:auto divs in iOS\r\n                        $el.css('max-height', 'calc(100% - ' + $el.css('margin-top') + ' - ' +  $el.css('margin-bottom') + ')');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add-close-button method\r\n         *\r\n         * @param {object} el - popup instance DOM node\r\n         */\r\n        addclosebutton: function (el) {\r\n            var genericCloseButton;\r\n\r\n            if ($(el).data('popupoptions').closebuttonmarkup) {\r\n                genericCloseButton = $(options.closebuttonmarkup).addClass(el.id + '_close');\r\n            } else {\r\n                genericCloseButton = '<button class=\"popup_close ' + el.id + '_close\" title=\"Close\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>';\r\n            }\r\n\r\n            if ($(el).data('popup-initialized')){\r\n                $(el).append(genericCloseButton);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Callback event calls\r\n     *\r\n     * @param {object} el - popup instance DOM node\r\n     * @param {number} ordinal - order number of an `open` element\r\n     * @param {function} func - callback function\r\n     */\r\n    var callback = function (el, ordinal, func) {\r\n        var options = $(el).data('popupoptions');\r\n        var openelement;\r\n        var elementclicked;\r\n        if (typeof options === 'undefined') return;\r\n        openelement =  options.openelement ? options.openelement : ('.' + el.id + opensuffix);\r\n        elementclicked = $(openelement + '[data-popup-ordinal=\"' + ordinal + '\"]');\r\n        if (typeof func == 'function') {\r\n            func.call($(el), el, elementclicked);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if element is fully in viewport\r\n     *\r\n     * @param {object} el - popup instance DOM node\r\n     */\r\n    var isInViewport = function (el) {\r\n        var bounding = el.getBoundingClientRect();\r\n        return (\r\n            bounding.top >= 0 &&\r\n            bounding.left >= 0 &&\r\n            bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n            bounding.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n        );\r\n    };\r\n\r\n    // Hide popup if ESC key is pressed\r\n    $(document).on('keydown', function (event) {\r\n        if(visiblePopupsArray.length) {\r\n            var elementId = visiblePopupsArray[visiblePopupsArray.length - 1];\r\n            var el = document.getElementById(elementId);\r\n\r\n            if ($(el).data('popupoptions').escape && event.keyCode == 27) {\r\n                methods.hide(el);\r\n            }\r\n        }\r\n    });\r\n\r\n    // Hide popup on click\r\n    $(document).on('click', function (event) {\r\n        if(visiblePopupsArray.length) {\r\n            var elementId = visiblePopupsArray[visiblePopupsArray.length - 1];\r\n            var el = document.getElementById(elementId);\r\n            var closeButton = ($(el).data('popupoptions').closeelement) ? $(el).data('popupoptions').closeelement : ('.' + el.id + closesuffix);\r\n\r\n            // If Close button clicked\r\n            if ($(event.target).closest(closeButton).length) {\r\n                event.preventDefault();\r\n                methods.hide(el);\r\n            }\r\n\r\n            // If clicked outside of popup\r\n            if ($(el).data('popupoptions')\r\n                && $(el).data('popupoptions').blur\r\n                && !$(event.target).closest($(el).data('popupoptions').blurignore).length\r\n                && !$(event.target).closest('#' + elementId).length\r\n                && event.which !== 2\r\n                && $(event.target).is(':visible')) {\r\n\r\n                if ($(el).data('popupoptions').background) {\r\n                    // If clicked on popup cover\r\n                    methods.hide(el);\r\n\r\n                    // Older iOS/Safari will trigger a click on the elements below the cover,\r\n                    // when tapping on the cover, so the default action needs to be prevented.\r\n                    event.preventDefault();\r\n\r\n                } else {\r\n                    // If clicked on outer content\r\n                    methods.hide(el, true);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    // Keep keyboard focus inside of popup\r\n    $(document).on('keydown', function(event) {\r\n        if(visiblePopupsArray.length && event.which == 9) {\r\n            // If tab or shift-tab pressed\r\n            var elementId = visiblePopupsArray[visiblePopupsArray.length - 1];\r\n            var el = document.getElementById(elementId);\r\n            var options = $(el).data('popupoptions');\r\n\r\n            // If the last opened popup doesn't have `keepfocus` option, ignore the rest and don't lock the focus inside of popup.\r\n            if (!options.keepfocus) {\r\n                return;\r\n            }\r\n\r\n            // Get list of all children elements in given object\r\n            var popupItems = $(el).find('*');\r\n\r\n            // Get list of focusable items\r\n            var focusableItems = popupItems.filter(focusableElementsString).filter(':visible');\r\n\r\n            // Get currently focused item\r\n            var focusedItem = $(':focus');\r\n\r\n            // Get the number of focusable items\r\n            var numberOfFocusableItems = focusableItems.length;\r\n\r\n            // Get the index of the currently focused item\r\n            var focusedItemIndex = focusableItems.index(focusedItem);\r\n\r\n            // If popup doesn't contain focusable elements, focus popup itself\r\n            if (numberOfFocusableItems === 0) {\r\n                $(el).focus();\r\n                event.preventDefault();\r\n            } else {\r\n                if (event.shiftKey) {\r\n                    // Back tab\r\n                    // If focused on first item and user preses back-tab, go to the last focusable item\r\n                    if (focusedItemIndex === 0) {\r\n                        focusableItems.get(numberOfFocusableItems - 1).focus();\r\n                        event.preventDefault();\r\n                    }\r\n\r\n                } else {\r\n                    // Forward tab\r\n                    // If focused on the last item and user preses tab, go to the first focusable item\r\n                    if (focusedItemIndex == numberOfFocusableItems - 1) {\r\n                        focusableItems.get(0).focus();\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Plugin API\r\n     */\r\n    $.fn.popup = function (customoptions) {\r\n        return this.each(function () {\r\n\r\n            var $el = $(this);\r\n            var newDefaults = $.extend(true, {}, $.fn.popup.defaults);\r\n\r\n            // Set defaults for tooltips dynamically instead of implicitly, so they can be overriden with custom options.\r\n            if (customoptions && customoptions.type === 'tooltip') {\r\n                newDefaults.background = false;\r\n            }\r\n\r\n            if (typeof customoptions === 'object') {  // e.g. $('#popup').popup({'color':'blue'})\r\n                var opt = $.extend({}, newDefaults, $el.data('popupoptions'), customoptions);\r\n                $el.data('popupoptions', opt);\r\n                options = $el.data('popupoptions');\r\n\r\n                methods._init(this);\r\n\r\n            } else if (typeof customoptions === 'string') { // e.g. $('#popup').popup('hide')\r\n                if (!($el.data('popupoptions'))) {\r\n                    $el.data('popupoptions', newDefaults);\r\n                    options = $el.data('popupoptions');\r\n                }\r\n\r\n                methods[customoptions].call(this, this);\r\n\r\n            } else { // e.g. $('#popup').popup()\r\n                if (!($el.data('popupoptions'))) {\r\n                    $el.data('popupoptions', newDefaults);\r\n                    options = $el.data('popupoptions');\r\n                }\r\n\r\n                methods._init(this);\r\n\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    // destroy all popups\r\n    $.fn.popup.destroyall = function () {\r\n        // TODO: create tests to check if we can use `hide` method (perhaps we'll need to remove transitions)\r\n        // or we need another way of removing the data when destroying.\r\n        for(var i=0; i < visiblePopupsArray.length; i++) {\r\n            $('#' + visiblePopupsArray[i]).popup('hide');\r\n        }\r\n        $('.popup_wrapper').remove();\r\n        $('.popup_background').remove();\r\n        // visiblePopupsArray = []; // TODO: check if we need this for SPA and popups with fadeOut animation and scrolllock\r\n        $(document).off('click.jqp');\r\n    };\r\n\r\n    $.fn.popup.defaults = {\r\n        type: 'overlay',\r\n        absolute: false,\r\n        autoopen: false,\r\n        background: true,\r\n        color: 'black',\r\n        opacity: '0.5',\r\n        horizontal: 'center',\r\n        vertical: 'middle',\r\n        offsettop: 0,\r\n        offsetleft: 0,\r\n        escape: true,\r\n        blur: true,\r\n        blurignore: null,\r\n        setzindex: true,\r\n        autozindex: false,\r\n        scrolllock: false,\r\n        closebutton: false,\r\n        closebuttonmarkup: null,\r\n        keepfocus: true,\r\n        focuselement: null,\r\n        focusdelay: 50,\r\n        outline: false,\r\n        pagecontainer: null,\r\n        detach: false,\r\n        openelement: null,\r\n        closeelement: null,\r\n        transition: null,\r\n        tooltipanchor: null,\r\n        beforeopen: null,\r\n        onclose: null,\r\n        onopen: null,\r\n        opentransitionend: null,\r\n        closetransitionend: null\r\n    };\r\n\r\n})(jQuery); /* eslint-disable-line */\r\n\n\n//# sourceURL=webpack:///./node_modules/jquery-popup-overlay/jquery.popupoverlay.js?")},1:function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! /home/cosmin/Documents/Woosa/Projects/woosa-adyen/assets/es6/checkout.js */"./assets/es6/checkout.js");\n\n\n//# sourceURL=webpack:///multi_./assets/es6/checkout.js?')}},w={},x.m=v,x.c=w,x.d=function(n,e,r){x.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},x.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},x.t=function(e,n){if(1&n&&(e=x(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(x.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)x.d(r,t,function(n){return e[n]}.bind(null,t));return r},x.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return x.d(e,"a",e),e},x.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},x.p="",x(x.s=1)}]);